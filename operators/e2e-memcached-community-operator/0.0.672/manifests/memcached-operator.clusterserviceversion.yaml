---
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "cache.quay.io/v1alpha1",
          "kind": "Memcached",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        }
      ]
    capabilities: Basic Install
    createdAt: "2023-05-08T05:15:50Z"
    operators.operatorframework.io/builder: operator-sdk-v1.28.1
    operators.operatorframework.io/project_layout: ansible.sdk.operatorframework.io/v1
    categories: Cloud Provider
    containerImage: quay.io/rhn_apal/memcached-operator@sha256:ebbfedd514944e1a2a140f785f900d482eecbfff2e3d67bf76f6ee54569a49bc
    repository: https://github.com/opcert
    support: Community
    description: AWS ACM controller is a service controller for managing ACM resources
      in Kubernetes
  name: e2e-memcached-community-operator.v0.0.672
  namespace: placeholder
spec:
  relatedImages:
    - name: kube-rbac-proxy
      image: gcr.io/kubebuilder/kube-rbac-proxy@sha256:d4883d7c622683b3319b5e6b3a7edfbf2594c18060131a8bf64504805f875522
    - name: memcached-operator
      image: quay.io/rhn_apal/memcached-operator@sha256:ebbfedd514944e1a2a140f785f900d482eecbfff2e3d67bf76f6ee54569a49bc
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: Memcached
      name: memcacheds.cache.quay.io
      description: Memcached is the Schema for the memcacheds API
      version: v1alpha1
  description: |-
    Memcached E2E Operator
  minKubeVersion: 1.20.0
  displayName: memcached
  icon:
  - base64data: iVBORw0KGgoAAAANSUhEUgAAAFAAAAAoAQMAAABTru9CAAAAA1BMVEUAAP+KeNJXAAAADUlEQVQYGWMYBUMSAAABuAAB2T8o+AAAAABJRU5ErkJggg==
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          - pods
          - pods/exec
          - pods/log
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - cache.quay.io
          resources:
          - memcacheds
          - memcacheds/status
          - memcacheds/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: e2e-memcached-community-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: e2e-memcached-community-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: e2e-memcached-community-operator
          control-plane: controller-manager
        name: e2e-memcached-community-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                        - ppc64le
                        - s390x
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy@sha256:d4883d7c622683b3319b5e6b3a7edfbf2594c18060131a8bf64504805f875522
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:6789
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=e2e-memcached-community-operator
                env:
                - name: ANSIBLE_GATHERING
                  value: explicit
                image: quay.io/rhn_apal/memcached-operator@sha256:ebbfedd514944e1a2a140f785f900d482eecbfff2e3d67bf76f6ee54569a49bc
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 6789
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 6789
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 768Mi
                  requests:
                    cpu: 10m
                    memory: 256Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: e2e-memcached-community-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: e2e-memcached-community-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - ai
  - ml
  links:
  - name: Memcached Operator
    url: https://e2e-memcached-community-operator.domain
  maintainers:
  - email: apal@redhat.com
    name: avnish
  maturity: alpha
  provider:
    name: RedHat
    url: www.redhat.com
  version: 0.0.672
